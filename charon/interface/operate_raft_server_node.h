/*************************************************************
 * 
 *  #####   ###   #     #    #		 #     #####    #####     ####
 *    #			 #    #	#	  #			#		#			 #  #	  	#		#		 #
 *    #			 #    #		# #				#				 ###			#####    #		
 *    #			###   #		  #				#				 #   #		#					####
 *
 * operate_raft_server_node.h
 * Generated by tinyrpc framework tinyrpc_generator.py
 * Create Time: 2022-11-19 16:24:34
 * This file will not be overwrite althrough protobuf file changed !!!
 * Just write this file while not exist
*************************************************************/

#ifndef CHARON_INTERFACE_OPERATE_RAFT_SERVER_NODE_H
#define CHARON_INTERFACE_OPERATE_RAFT_SERVER_NODE_H 

#include "charon/pb/charon.pb.h"



namespace charon {

/*
 * Rpc Interface Class
 * Alloc one object every time RPC call begin, and destroy this object while RPC call end
*/

class OperateRaftServerNodeInterface {
 public:

  OperateRaftServerNodeInterface(const ::OperateRaftServerNodeRequest& request, ::OperateRaftServerNodeResponse& response);

  ~OperateRaftServerNodeInterface();

  void run();

  void checkInputParam();

  void dispatchOperator();

  void dealOperatorAdd();

  void dealOperatorUpdate();

  void dealOperatorDelete();

  void dealOperatorQuery();

  void checkAddrInvalid(const std::string& addr);

 private:
  const ::OperateRaftServerNodeRequest& m_request;      // request object fron client

  ::OperateRaftServerNodeResponse& m_response;           // response object that reply to client

  ::RAFT_SERVER_OPERATION m_option;

};


}


#endif